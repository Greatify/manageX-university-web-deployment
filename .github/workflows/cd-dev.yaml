name: Deploy to Development

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Docker image to deploy'
        required: true
      sha:
        description: 'Git SHA of the commit'
        required: true
      commit_message:
        description: 'Sanitized commit message'
        required: true
      actor:
        description: 'Sanitized actor name'
        required: true

jobs:
  Deploy-to-Dev:
    name: Deploy to Dev
    runs-on: ubuntu-24.04-arm
    environment: dev
    timeout-minutes: 20
    env:
      CLOUDFRONT_DISTRIBUTION: ${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION }}
      URL: ${{ vars.DEV_URL }}
    steps:
      - name: Checkout CodeBase
        uses: actions/checkout@v4
        with:
          ref: 'main'
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set image tag from dispatch input
        run: |
          echo "LARAVEL_IMAGE=${{ github.event.inputs.image }}" >> $GITHUB_ENV
          echo "COMMIT_SHA=${{ github.event.inputs.sha }}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=${{ github.event.inputs.commit_message }}" >> $GITHUB_ENV
          echo "ACTOR=${{ github.event.inputs.actor }}" >> $GITHUB_ENV

      - name: Update PHP Laravel deployment image tag and change cause
        run: |
          # Update image tags in the dev overlay kustomization file
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            # macOS - BSD sed requires empty string after -i
            sed -i '' "s|image: .*|image: ${{ env.LARAVEL_IMAGE }}|g" k8s/overlays/dev/kustomization.yaml
            sed -i '' "s|kubernetes.io/change-cause: .*|kubernetes.io/change-cause: Update to ${{ env.LARAVEL_IMAGE }} |g" k8s/overlays/dev/kustomization.yaml
          else
            # Linux - GNU sed
            sed -i "s|image: .*|image: ${{ env.LARAVEL_IMAGE }}|g" k8s/overlays/dev/kustomization.yaml
            sed -i "s|kubernetes.io/change-cause: .*|kubernetes.io/change-cause: Update to ${{ env.LARAVEL_IMAGE }} |g" k8s/overlays/dev/kustomization.yaml
          fi

      - name: Commit and Push Changes
        run: |
          git pull origin main
          git config --local user.email "suriyanarayanan.s@greatify.ai"
          git config --local user.name "surya1005"
          git add -f k8s/overlays/dev/kustomization.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit, skipping commit and push"
          else
            echo "Changes detected, committing and pushing"
            git commit -m "Update deployment image and change cause [Automated] For Dev Environment"
            git push origin main
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.DEV_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Apply K8s manifests to Dev Environment With Validation
        run: |
          kubectl apply -k k8s/overlays/dev --validate=true
          kubectl rollout status deployment/managex-university -n dev-managex-university --timeout=300s

      - name: Create CloudFront Invalidation
        run: |
          INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION }} --paths "/*" --query 'Invalidation.Id' --output text)
          echo "Created invalidation: $INVALIDATION_ID"
          aws cloudfront wait invalidation-completed --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION }} --id $INVALIDATION_ID

      - name: Slack Notification On Deployment Status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: managex-university
          author_name: University Dev Deployment Status
          text: |
            [${{ job.status == 'success' && '✅' || '❌' }}] University Dev Deployment: ${{ job.status }}
            Commit: ${{ github.event.inputs.sha }} | By: @${{ github.event.inputs.actor }}
            Message: ${{ github.event.inputs.commit_message }}
            *URL:* ${{env.URL}}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}